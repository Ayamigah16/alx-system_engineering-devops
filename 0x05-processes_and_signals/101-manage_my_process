#!/usr/bin/env bash
# Manages the script manage_my_process.
#   When passed the argument `start`:
#     1. Starts manage_my_process
#     2. Creates a file containing its PID in /var/run/my_process.pid
#     3. Displays "manage_my_process started"
#   When passed the argument `stop`:
#     1. Stops manage_my_process
#     2. Deletes the file /var/run/my_process.pid
#     3. Displays "manage_my_process stopped"
#   When passed the argument `restart`:
#     1. Stops manage_my_process
#     2. Deletes the file /var/run/my_process.pid
#     3. Starts manage_my_process
#     4. Creates a file containing its PID in /var/run/my_process.pid
#     5. Displays "manage_my_process restarted"
#   If any other or no arguments are passed, displays
#   "Usage: manage_my_process {start|stop|restart}"

MANAGE_SCRIPT="./manage_my_process"

if [ "$1" == "start" ]; then
  $MANAGE_SCRIPT &
  echo $! > /var/run/my_process.pid
  echo "manage_my_process started"

elif [ "$1" == "stop" ]; then
  if [ -f /var/run/my_process.pid ]; then
    PID=$(cat /var/run/my_process.pid)
    kill $PID
    rm /var/run/my_process.pid
    echo "manage_my_process stopped"
  else
    echo "No process running."
  fi

elif [ "$1" == "restart" ]; then
  if [ -f /var/run/my_process.pid ]; then
    PID=$(cat /var/run/my_process.pid)
    kill $PID
    rm /var/run/my_process.pid
    $MANAGE_SCRIPT &
    echo $! > /var/run/my_process.pid
    echo "manage_my_process restarted"
  else
    echo "No process running. Starting a new one..."
    $MANAGE_SCRIPT &
    echo $! > /var/run/my_process.pid
    echo "manage_my_process started"
  fi

else
  echo "Usage: manage_my_process {start|stop|restart}"
fi
